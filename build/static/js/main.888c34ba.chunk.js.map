{"version":3,"sources":["context/entries.context.js","components/Search/style.js","utils/data.placeholders.js","components/Search/index.js","components/Results/style.js","components/Results/index.js","components/Socials/index.js","App.js","reportWebVitals.js","index.js"],"names":["EntriesContext","createContext","entries","EntriesContextProvider","children","useState","setEntries","items","setItems","useEffect","a","axios","method","url","headers","data","JSON","stringify","then","res","catch","error","console","log","result","Provider","value","count","length","EntrySearch","styled","div","InputWrapper","Input","input","FilterButton","button","_active","searchCriterion","name","Search","placeholder","inputRef","onTextChange","searchCount","totalCount","searchFilter","setSearchFilter","checkEntries","setPageNumber","queryText","setFilter","dot","setDot","total","renderDots","_search","extra","setTimeout","ref","onChange","onClick","size","title","style","display","Object","keys","map","item","key","Container","InfoWrapper","Content","Table","section","table","Results","isSearch","defaults","pageNumber","titleBars","renderTableFunction","link","column_values","height","column","parse","String","width","itemProps","push","subProps","index","subValue","subTitle","fontSize","styles","colors","minWidth","head","Socials","cursor","justifyContent","borderTop","padding","rel","href","target","color","App","useContext","actions","dispatch","type","payload","text","useReducer","state","action","Error","useRef","setIsSearch","setIsSearchCount","filteredEntries","setFilteredEntries","selectEntries","_entries","saveCount","filter","toLowerCase","includes","query","setQuery","className","current","_QUERY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,EAAiBC,wBAAc,CAAEC,QAAS,KAiDzC,I,sBAEQC,EA1Cf,YAA+C,IAAbC,EAAY,EAAZA,SAC9B,EAA8BC,mBAAS,IAAvC,mBAAOH,EAAP,KAAgBI,EAAhB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KA+BA,OA7BAC,qBAAU,YACN,uCAAC,4BAAAC,EAAA,sEACwBC,IAAM,CACvBC,OAAQ,OACRC,IAdE,4BAeFC,QAAS,CACL,eAAgB,mBAChB,cAAiB,wNAErBC,KAAMC,KAAKC,UAAU,CACjB,MAhBR,6FAmBCC,MAAK,SAACC,GAAD,OAASA,EAAIJ,QAClBK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,uBAbjC,UACSC,EADT,wDAmBGlB,EAAWkB,GAnBd,2CAAD,uDAuBAtB,EAAQa,MAAQP,EAASN,EAAQa,KAAR,OAAuB,GAAvB,SAE1B,CAACb,IAIA,cAACF,EAAeyB,SAAhB,CAAyBC,MAAO,CAAExB,UAASK,QAAOoB,MAAOpB,EAAMqB,QAA/D,SACKxB,K,cC7CAyB,EAAcC,IAAOC,IAAV,uiBAqCXC,GAZWF,IAAOC,IAAV,wOAYOD,IAAOC,IAAV,snBA2BZE,EAAQH,IAAOI,MAAV,yUAeLC,EAAeL,IAAOM,OAAV,6dAGZ,qBAAGC,QAAwB,QAAU,aAChC,qBAAGA,QAAwB,UAAY,U,OCrF5CC,EAAkB,CAC3BC,KAAM,mECIH,SAASC,EAAT,GAAoK,IAAlJC,EAAiJ,EAAjJA,YAAaC,EAAoI,EAApIA,SAAUC,EAA0H,EAA1HA,aAAcC,EAA4G,EAA5GA,YAAaC,EAA+F,EAA/FA,WAAYC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,gBAAiBC,EAAoD,EAApDA,aAAoCC,GAAgB,EAAtCC,UAAsC,EAA3BC,UAA2B,EAAhBF,eACtJ,EAAsB5C,mBAAS,IAA/B,mBAAO+C,EAAP,KAAYC,EAAZ,KAEMC,EAAST,GAAD,iBAAwBU,KAChCC,EAAWZ,GAAD,iBAAyBW,KAGzC,SAASA,IACL,IAAM5B,EAAQyB,EAAIxB,OACd6B,EAAQL,EAAM,IAUlB,OATAM,YAAW,WAMPL,EALa,IAAV1B,EAKI8B,EAJHA,EAAQ,OAKb,KAGCL,EAqCR,OACI,eAACvB,EAAD,WACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAOQ,YAAaA,EAAakB,IAAKjB,EAAUkB,SAAUjB,IAC1D,wBAAQkB,QArCpB,WACIb,IACAC,EAAc,IAmCN,SAA+B,cAAC,IAAD,CAAUa,KAAM,QAASC,MAAM,gBAKlE,gCACI,gDAAmBT,EAAnB,OACA,+BAjBJ,qBAAKU,MAAO,CAAEC,QAAS,QAAvB,SACKC,OAAOC,KAAK7B,GAAiB8B,KAAI,SAACC,EAAMC,GAAP,OAAe,cAACnC,EAAD,CAAcE,QAASS,IAAiBuB,EAA+BR,QAAS,kBAAMd,EAAgBsB,IAAtG,SAA8GA,GAA5CC,UAiBnH,oDAAuBd,WCxEhC,IAAMe,EAAYzC,IAAOC,IAAV,iHAOTyC,EAAc1C,IAAOC,IAAV,8MAYX0C,EAAU3C,IAAOC,IAAV,00CAoFP2C,GAbU5C,IAAO6C,QAAV,4GAOI7C,IAAO6C,QAAV,+EAMA7C,IAAO8C,MAAV,qcCtGX,SAASC,EAAT,GAAiF,IAA9D3E,EAA6D,EAA7DA,QAASK,EAAoD,EAApDA,MAAOuE,EAA6C,EAA7CA,SAAUnD,EAAmC,EAAnCA,MAE5CoD,GAF+E,EAA5BC,WAA4B,EAAhB/B,cAEpD,IACf,EAAsB5C,mBAAS,IAA/B,6BAmBA,IAAI4E,EAAY,GA0BhB,SAASC,EAAT,GAA4C,IAAbC,EAAY,EAAZA,KAAMb,EAAM,EAANA,IACzBc,EAAwBD,EAAxBC,cAAe7C,EAAS4C,EAAT5C,KAEvB,OACA,qBAAIyB,MAAO,CAAEqB,OAAO,QAApB,UACI,6BAAK9C,IAED6C,GAAiBA,EAAchB,KAAI,SAACkB,EAAQhB,GAExC,IAAI9C,EAA+C,kBAA9BR,KAAKuE,MAAMD,EAAO5D,OACnB,MAAhB4D,EAAO5D,MACH,OAEA,gBAEJ8D,OAAOxE,KAAKuE,MAAMD,EAAO5D,QAE7B,OAAO,oBAAcsC,MAAO,CAAEyB,MAAO,OAA9B,SAAwCjE,GAA/B8C,QAbOA,GA4DvC,OAxFA/D,EAAMqB,OAAS,GAAKrB,EAAM,GAAG6E,cAAchB,KAAI,SAACsB,EAAWpB,GACvD,IAAQ5C,EAAiBgE,EAAjBhE,MAAOqC,EAAU2B,EAAV3B,MAef,OAbAgB,EAASY,KAAK,CACVjE,QAAOqC,UAGXxD,EAAM,GAAG6E,cAAchB,KAAI,SAACwB,EAAUC,GAElC,IAAeC,EAA8BF,EAArClE,MAAwBqE,EAAaH,EAApB7B,MAIzB,OAFAkB,EAAUc,GAAY/E,KAAKuE,MAAMO,GAE1B,MAGJ,QAyEP,mCAxCa,IAAVnE,EAEK,cAAC4C,EAAD,UAEQ,eAACC,EAAD,WACI,sBAAMR,MAAO,CAAEgC,SAAU,WAAzB,SAAuC,uBAA4B,uBACnE,sBAAMhC,MAAO,CAAEgC,SAAU,YAAzB,SAAwC,kDAOpD,cAACzB,EAAD,UACI,cAACE,EAAD,UAEQ,eAACC,EAAD,CAAOuB,OAAQ,CAAEC,OAAQ,SAAzB,UACI,gCACI,+BACI,oBAAIlC,MAAO,CAAEmC,SAAU,QAAvB,SAAkC,SACjCjC,OAAOC,KAAKc,GAAWb,KAAI,SAACgC,EAAMP,GAAP,OAAiB,6BAAiBO,GAARP,WAG9D,gCAEQ3F,GAAW4E,EACP5E,GAAWA,EAAQkE,KAAI,SAACe,EAAMU,GAAP,OAAiBX,EAAoB,CAAEC,OAAMb,IAAKuB,OAEzEtF,GAASA,EAAM6D,KAAI,SAACe,EAAMU,GAAP,OAAiBX,EAAoB,CAAEC,OAAMb,IAAKuB,kBCtG1G,SAASQ,IACZ,OACI,sBAAKrC,MAAO,CAAEC,QAAS,OAAQqC,OAAQ,UAAWC,eAAgB,eAAgBC,UAAW,oBAAqBC,QAAS,QAA3H,UACI,mBAAGC,IAAI,aAAaC,KAAK,sCAAsCC,OAAO,SAAS7C,MAAM,aAArF,SAAkG,cAAC,IAAD,CAAU8C,MAAM,cAClH,mBAAGH,IAAI,aAAaC,KAAK,qDAAqDC,OAAO,SAAS7C,MAAM,eAApG,SAAmH,cAAC,IAAD,CAAY8C,MAAM,iB,MC+GlIC,MA5Gf,WACE,MP0CqCC,qBAAW/G,GO1CxCO,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,MAETqF,EACS,aAef,SAAS7D,EAAUyD,GAEjBK,EAAS,CAACC,KAAMF,EAAqBG,QAAS,CAAEC,KAAMR,KAIxD,MAA2BS,sBAhB3B,SAAsBC,EAAOC,GAC3B,GAAOA,EAAOL,OACPF,EACH,OAAO,2BAAKM,GAAZ,IAAmBF,KAAMG,EAAOJ,QAAQC,OAExC,MAAM,IAAII,MAAM,2BAPD,CAAEJ,KAAM,KAkB7B,mBAAOE,EAAP,KAAcL,EAAd,KAEMvE,EAAW+E,iBAAO,MACxB,EAAgCpH,oBAAS,GAAzC,mBAAOyE,EAAP,KAAiB4C,EAAjB,KAEA,EAAwCrH,mBAAS,GAAjD,mBAAOuC,EAAP,KAAoB+E,EAApB,KACA,EAA8CtH,mBAAS,IAAvD,mBAAOuH,EAAP,KAAwBC,EAAxB,KACA,EAAwCxH,mBAAS,QAAjD,mBAAOyC,EAAP,KAAqBC,EAArB,KAGA,EAAqC1C,mBAAS,GAA9C,mBAAO2E,EAAP,KAAmB/B,EAAnB,KAEA,SAAS6E,EAAcC,EAAvB,GAA4C,IAATX,EAAQ,EAARA,KAC3BY,EAAYD,EAASE,QAAO,SAAA9C,GAAI,OAAIA,GAAQA,EAAKrC,GAAcoF,cAAcC,SAASf,EAAKc,kBAGjG,OAFAP,EAAiBK,EAAUpG,QAC3BiG,EAAmBG,GACZA,EAYT,MAA0B3H,mBAAS,IAAnC,mBAAO+H,EAAP,KAAcC,EAAd,KAgBA,OACE,sBAAKC,UAAU,MAAf,UACE,8BACE,cAAC9F,EAAD,CACEG,aAnBR,WACE,GAAGD,EAAS6F,SAAW7F,EAAS6F,QAAQ7G,OAGtC,GAFAyB,EAAUT,EAAS6F,QAAQ7G,OAExBC,EAAM,CACP,IAAM6G,EAASjI,EAAM0H,QAAO,SAAA9C,GAAI,OAAIA,GAAQA,EAAKrC,GAAcoF,cAAcC,SAASb,EAAMF,KAAKc,kBAEjG,YADAG,EAASG,WAcP/F,YAAaH,EAAgBQ,GAC7BJ,SAAUA,EACVoC,SAAUA,EACV/B,gBAAiBA,EACjBD,aAAcA,EACd4E,YAAaA,EACb9E,YAAaA,EACb+E,iBAAkBA,EAClB9E,WAAYlB,EACZqB,aAtCR,WACE,GAAGrB,EAAQ,EAGT,OAFAmG,EAAcvH,EAAO+G,QACrBI,GAAY,IAoCRxE,UAAWkF,EACXjF,UAAWA,EACX6B,WAAYA,EACZ/B,cAAeA,MAKnB,cAAC4B,EAAD,CACE3E,QAAS0H,EACTrH,MAAOA,EACPoB,MAAOA,EACP2F,MAAOA,EACPxC,SAAUA,EACV4C,YAAaA,EACbI,cAAeA,EACf9C,WAAYA,EACZ/B,cAAeA,IAEjB,cAACoD,EAAD,QCpGSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzH,MAAK,YAAkD,IAA/C0H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.888c34ba.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst EntriesContext = createContext({ entries: {} })\r\n\r\n// const ENDPOINT = \"https://api.publicapis.org/entries\"\r\nconst _ENDPOINT = \"https://api.monday.com/v2\"\r\n\r\n// let query = '{boards(ids: 1832485672) { name id description items { name column_values{title id type text } } } }';\r\n// let query = '{boards(ids: 1832485672) { items{ name } views { id name type  } }}';\r\nlet query = '{boards(ids: 1832485672) { items{ name  column_values{ id text title type value } } }}';\r\n\r\nfunction EntriesContextProvider({ children }) {\r\n    const [entries, setEntries] = useState([])\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async function fetchData(){\r\n            const result = await axios({\r\n                method: \"POST\",\r\n                url: _ENDPOINT,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk5ODEwOTY1LCJ1aWQiOjE1MzUwNTMzLCJpYWQiOiIyMDIxLTAyLTE2VDEyOjE3OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo0MjU4MjgwLCJyZ24iOiJ1c2UxIn0.wrR7q2mQTPRJ8tOzSN2IVLDG81DJ_d-VxRkpSPSLZ2M\"\r\n                },\r\n                data: JSON.stringify({\r\n                    \"query\": query\r\n                })\r\n            })\r\n            .then((res) => res.data)\r\n            .catch((error) => console.log(\"error caught 404\"))\r\n\r\n            if(!result){\r\n                return\r\n            }\r\n            \r\n            setEntries(result)\r\n\r\n        })()\r\n\r\n        entries.data && setItems(entries.data['boards'][0]['items'])\r\n        \r\n    }, [entries])\r\n\r\n\r\n    return (\r\n        <EntriesContext.Provider value={{ entries, items, count: items.length }}>\r\n            {children}\r\n        </EntriesContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useEntriesContext = () => useContext(EntriesContext)\r\n\r\nexport default EntriesContextProvider","import styled from 'styled-components'\r\n\r\nexport const EntrySearch = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-family: Arial;\r\n    max-width: 100%;\r\n\r\n    div:nth-child(2){\r\n        width: 100%;\r\n        font-size: small;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        color: #4c8bf5;\r\n        padding: 12px;\r\n    }\r\n\r\n    div:nth-child(3){\r\n        font-size: small;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        color: #4c8bf5;\r\n        padding: 12px;\r\n    }\r\n`\r\nexport const InfoSpan = styled.div`\r\n    color: #4c8bf5; \r\n    border: 1px solid #4c8bf5;\r\n    padding: 7px;\r\n    border-radius: 20px; \r\n    margin-left: 6px;\r\n\r\n    :hover{\r\n        background-color: #4c8bf5;\r\n        color: white;\r\n    }\r\n`\r\nexport const InputWrapper = styled.div`\r\n    padding: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    button {\r\n        display: flex;\r\n        color: rgba(76, 139, 245, .5);\r\n        background: rgba(76, 139, 245, .2);\r\n        border: 1px solid #4c8bf5;\r\n        border-left: none;\r\n        height: 28px;\r\n        align-self: center;\r\n        font-size: x-small;\r\n        letter-spacing: 1px;\r\n        cursor: pointer;\r\n        transition: .4s ease-in-out;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n\r\n        :hover {\r\n            color: white;\r\n        }\r\n    }\r\n    \r\n`\r\nexport const Input = styled.input`\r\n    position: relative;\r\n    width: 35%;\r\n    padding: 5px;\r\n    border: 1px solid #4c8bf5;\r\n    border-right: none;\r\n    background: rgba(76, 139, 245, .2);\r\n    color: rgba(76, 139, 245, .4);\r\n\r\n    :focus {\r\n        outline: 1px solid #4c8bf5;\r\n        border: none;\r\n        padding: 5px;\r\n    }\r\n`\r\nexport const FilterButton = styled.button`\r\n    display: flex;\r\n    padding: 12px;\r\n    color: ${({ _active }) => _active ? \"white\" : \"#4c8bf5\"};\r\n    background: ${({ _active }) => _active ? \"#4c8bf5\" : \"none\"};\r\n    border: 1px solid #4c8bf5;\r\n    height: 20px;\r\n    align-self: center;\r\n    font-size: x-small;\r\n    letter-spacing: 1px;\r\n    cursor: pointer;\r\n    border-radius: 25px;\r\n    transition: .4s ease-in-out;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    :hover{\r\n        color: white;\r\n        background: #4c8bf5;\r\n    }\r\n`","export const searchCriterion = {\r\n    name: \"search items by number or name(e.g  13195 - Cake Silo Cleaning)\",\r\n    // API: \"try to search by searching through the APIs (e.g Axolotl, Cats, catAPI, Dog Facts)\",\r\n    // Link: \" you may search also using the link ( e.g http://shibe.online/ )\"\r\n}","import { useState } from 'react'\r\nimport { EntrySearch, Input, InputWrapper, FilterButton } from \"./style\"\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport { searchCriterion } from \"../../utils/data.placeholders\"\r\n\r\nexport function Search({ placeholder, inputRef, onTextChange, searchCount, totalCount, searchFilter, setSearchFilter, checkEntries, queryText, setFilter, setPageNumber }){\r\n    const [dot, setDot] = useState(\"\")\r\n\r\n    const total = !totalCount ? `Loading${renderDots()}`: totalCount\r\n    const _search = !searchCount ? `Loading${renderDots()}` : searchCount\r\n\r\n\r\n    function renderDots(){\r\n        const count = dot.length\r\n        let extra = dot + \".\"\r\n        setTimeout(() => {\r\n            if(count === 3){\r\n                extra = \".\"\r\n                setDot(extra)\r\n                return\r\n            }\r\n            setDot(extra)\r\n        }, 1000)\r\n\r\n        return(\r\n            dot\r\n        )\r\n    }\r\n\r\n    function handleSearch(){\r\n        checkEntries()\r\n        setPageNumber(1)\r\n    }\r\n\r\n    // const [pageNumber] =  useState(0)\r\n\r\n    // function displayQuery(){\r\n    //     let limit = searchFilter.toLowerCase() === \"link\" ? 3 : 5\r\n    //     let _pagePosition = pageNumber * limit\r\n\r\n    //     let list = {}\r\n    //     queryText.map((item) => {\r\n    //         list[item[searchFilter]] = !list[item[searchFilter]] ? 1 : list[item[searchFilter]] += 1\r\n    //         return undefined\r\n    //     })\r\n\r\n    //     const queryList = Object.keys(list)\r\n    //     return(\r\n    //         queryList.slice(_pagePosition, _pagePosition + limit).map((item, key) => (\r\n    //             <InfoSpan key={key} onClick={() => { inputRef.current.value = item; setFilter(item) }}>{item}</InfoSpan>\r\n    //         ))\r\n    //     )\r\n    // }\r\n\r\n    function onFilter(){\r\n        return(\r\n            <div style={{ display: \"flex\" }}>\r\n                {Object.keys(searchCriterion).map((item, key) => <FilterButton _active={searchFilter === item ? true : false} key={key} onClick={() => setSearchFilter(item)}>{item}</FilterButton>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <EntrySearch>\r\n            <InputWrapper>\r\n                <Input placeholder={placeholder} ref={inputRef} onChange={onTextChange} />\r\n                <button onClick={handleSearch}><FaSearch size={\"1.5em\"} title=\"Search\" /></button>\r\n            </InputWrapper>\r\n            {/* <div>\r\n                {displayQuery()}\r\n            </div> */}\r\n            <div>\r\n                <span>TotalItems: {total} </span>\r\n                <span>{onFilter()}</span>\r\n                <span>Search Results: {_search}</span>\r\n            </div>\r\n        </EntrySearch>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  min-height: 100vh;\r\n  padding: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  position: relative;\r\n  align-self: center;\r\n  top: 10vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #4c8bf5;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 12px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-x: scroll;\r\n  overflow-y: scroll;\r\n  align-items: flex-start;\r\n  // transform: rotateX(180deg);\r\n  // border: 1px solid #4c8bf5;\r\n\r\n  ::-webkit-scrollbar{\r\n    width: 12px;\r\n    height: 13px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    box-shadow: inset 0 0 5px rgba(76, 139, 245, .2);\r\n    outline: 1px solid #4c8bf5;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb{\r\n    border-radius: 5px;\r\n    background: rgba(76, 139, 245, .6);\r\n\r\n    :hover{\r\n      background: rgba(255, 255, 255, 1);\r\n    }\r\n  }\r\n\r\n  ::-webkit-scrollbar-resizer{\r\n    background: none;\r\n  }\r\n\r\n  .currentLink {\r\n    // width: 80%;\r\n    height: 40px;\r\n    list-style-type: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: x-small;\r\n    font-family: Arial;\r\n    letter-spacing: 1px\r\n  }\r\n\r\n  .currentLink a {\r\n    padding: 6px;\r\n    margin: 10px; \r\n    border-radius: 2px;\r\n    border: 1px solid #4c8bf5;\r\n    cursor: pointer;\r\n    color: #4c8bf5;\r\n    display: block;\r\n    min-width: 20px;\r\n  }\r\n\r\n  .currentLink a:hover {\r\n    color: white;\r\n    background-color: #4c8bf5;\r\n    border-radius: 2px;\r\n    border: 1px solid #4c8bf5;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .paginateActive a {\r\n    color: white;\r\n    background-color: #4c8bf5;\r\n  }\r\n\r\n`;\r\n\r\nexport const THeader = styled.section`\r\n  color: green;\r\n  span {\r\n    color: blue;\r\n    border: 1px solid green;\r\n  }\r\n`\r\nexport const TContent = styled.section`\r\n  width: 150px;\r\n  height: 50px;\r\n  color: white;\r\n`\r\n\r\nexport const Table = styled.table`\r\n  font-family: monospace;\r\n  color: white;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  font-size: \"10px\";\r\n\r\n  td, th {\r\n    // border: 1px solid #dddddd;\r\n    border: 3px solid #4c8bf5;\r\n    text-align: center;\r\n    padding: 12px;\r\n    margin: 10px;\r\n  }\r\n\r\n  th {\r\n    font-size: 12px;\r\n    padding: 0px;\r\n    // max-width: 150px;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: rgba(76, 139, 245, .2);\r\n  }\r\n`\r\n","import {  useState } from \"react\";\r\nimport { Container, InfoWrapper, Content, Table } from \"./style\"\r\n\r\nexport function Results({ entries, items, isSearch, count, pageNumber, setPageNumber }){\r\n\r\n    let defaults = []\r\n    const [dot, setDot] = useState(\"\")\r\n\r\n    function renderDots(){\r\n        const count = dot.length\r\n        let extra = dot + \".\"\r\n        setTimeout(() => {\r\n            if(count === 3){\r\n                extra = \".\"\r\n                setDot(extra)\r\n                return\r\n            }\r\n            setDot(extra)\r\n        }, 1000)\r\n\r\n        return(\r\n            <span>{dot}</span>\r\n        )\r\n    }\r\n\r\n    let titleBars = {}\r\n\r\n    items.length > 0 && items[0].column_values.map((itemProps, key) => {\r\n        const { value, title } = itemProps\r\n\r\n        defaults.push({\r\n            value, title\r\n        })\r\n\r\n        items[0].column_values.map((subProps, index) => {\r\n\r\n            const { value: subValue, title: subTitle } = subProps\r\n\r\n            titleBars[subTitle] = JSON.parse(subValue)\r\n\r\n            return {}\r\n        })\r\n\r\n        return null\r\n    })\r\n    \r\n\r\n    // function renderNameCard({ name, column_values }, key){\r\n    //     return <NameCard key={key} name={name} column_values={column_values} count={count} defaults={Object.keys(titleBars)} keyX={key}/> \r\n    // }\r\n\r\n    function renderTableFunction({ link, key }){\r\n        const { column_values, name } = link\r\n\r\n        return (\r\n        <tr style={{ height:\"20px\" }} key={key}>\r\n            <td>{name}</td>\r\n            {\r\n                column_values && column_values.map((column, key) => {\r\n\r\n                    let result = (typeof(JSON.parse(column.value)) === \"object\") ? \r\n                        column.value == null ? \r\n                            \"null\" \r\n                        : \r\n                            \"object values\"\r\n                    :\r\n                        String(JSON.parse(column.value))\r\n\r\n                    return <td key={key} style={{ width: \"10%\" }}>{result}</td>\r\n                })\r\n            }\r\n        </tr>\r\n    )}\r\n\r\n\r\n    function renderResults(){\r\n        if(count === 0){\r\n            return(\r\n                <Container>\r\n                    {\r\n                        <InfoWrapper>\r\n                            <span style={{ fontSize: \"x-small\" }}>{\"No Results found ?\"}</span><br /> \r\n                            <span style={{ fontSize: \"xx-small\" }}>{\"Search or check your internet connection\"}</span>\r\n                        </InfoWrapper>\r\n                    }\r\n                </Container>\r\n            )\r\n        } else {\r\n            return(\r\n                <Container>\r\n                    <Content>\r\n                        {\r\n                            <Table styles={{ colors: \"white\" }}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{ minWidth: \"40px\" }}>{\"Name\"}</th >\r\n                                        {Object.keys(titleBars).map((head, index) => <th key={index}>{head}</th>) }             \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        entries && isSearch ? \r\n                                            entries && entries.map((link, index) => renderTableFunction({ link, key: index})) \r\n                                        : \r\n                                            items && items.map((link, index) => renderTableFunction({ link, key: index }))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>  \r\n                        }\r\n                    </Content> \r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {renderResults()}\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n// Pagination\r\n// const lastQueryElement = useCallback(node => {\r\n//     if(loading) return\r\n//     if(queryRef.current) queryRef.current.disconnect()\r\n//     queryRef.current = new IntersectionObserver(watchables => {\r\n//         if(watchables[0].isIntersecting){\r\n//             console.log(\"visible\", { watchables })\r\n//             setPageNumber(prev => prev + 1)\r\n//         }\r\n//     })\r\n//     if(node) queryRef.current.observe(node)\r\n\r\n// }, [loading])\r\n\r\n\r\n// let limit = 10\r\n//     const pageCount = entries && isSearch ? Math.ceil(entries.length / limit) : Math.ceil(items.length / limit)\r\n//     let _pagePosition = pageNumber * limit\r\n\r\n// function pageChange({ selected }){\r\n//     setPageNumber(selected)\r\n// }\r\n\r\n/* {entries && entries.slice(_pagePosition, _pagePosition + limit).map((link, key) => <EntryCard key={key} {...link} />)} \r\n    {\r\n        entries && isSearch ? \r\n            entries.slice(_pagePosition, _pagePosition + limit).map((link, key) => <NameCard key={key} {...link} />)\r\n        : \r\n            items.slice(_pagePosition, _pagePosition + limit).map((link, key) => <NameCard key={key} {...link} />)\r\n    }\r\n    <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel={\"Next\"}\r\n        pageCount={pageCount}\r\n        onPageChange={pageChange}\r\n        containerClassName={\"currentLink\"}\r\n        previousLinkClassname={\"previousLink\"}\r\n        nextLinkClassName={\"nextLink\"}\r\n        disabledClassName={\"paginateDisabled\"}\r\n        activeClassName={\"paginateActive\"}\r\n    /> \r\n*/\r\n\r\n                        ","import { FaGithub, FaLinkedin } from 'react-icons/fa'\r\n\r\nexport function Socials() {\r\n    return(\r\n        <div style={{ display: \"flex\", cursor: \"pointer\", justifyContent: \"space-around\", borderTop: \"1px solid #4c8bf5\", padding: \"12px\"}}>\r\n            <a rel=\"noreferrer\" href=\"https://github.com/xrp-amaebi/amara\" target=\"_blank\" title=\"xrp-amaebi\"><FaGithub color=\"#4c8bf5\"/></a>\r\n            <a rel=\"noreferrer\" href=\"https://www.linkedin.com/in/amaebi-amara-938975200\" target=\"_blank\" title=\"Amaebi Amara\"><FaLinkedin color=\"#4c8bf5\"/></a>\r\n        </div>\r\n    )\r\n}","import { useRef, useReducer, useState } from 'react';\nimport { useEntriesContext } from './context/entries.context';\nimport { Search } from './components/Search';\nimport { Results } from './components/Results';\nimport { Socials } from \"./components/Socials\";\nimport { searchCriterion } from './utils/data.placeholders';\n\nimport './App.css';\n\nfunction App() {\n  const { items, count } = useEntriesContext()\n\n  const actions = {\n    FILTER_TEXT: \"SET_FILTER\"\n  } \n\n  const initialState = { text: \"\" }\n\n  function entryReducer(state, action) {\n    switch(action.type){\n      case actions.FILTER_TEXT: \n        return { ...state, text: action.payload.text }\n      default:\n        throw new Error(\"something's not right\")\n      ;\n    }\n  }\n\n  function setFilter(target){\n\n    dispatch({type: actions.FILTER_TEXT, payload: { text: target }})\n\n  }\n  \n  const [state, dispatch]  = useReducer(entryReducer, initialState)\n\n  const inputRef = useRef(null)\n  const [isSearch, setIsSearch] = useState(false)\n\n  const [searchCount, setIsSearchCount] = useState(0)\n  const [filteredEntries, setFilteredEntries] = useState([])\n  const [searchFilter, setSearchFilter] = useState(\"name\")\n\n  \n  const [pageNumber, setPageNumber] =  useState(1)\n\n  function selectEntries(_entries, { text }) {\n    const saveCount = _entries.filter(link => link && link[searchFilter].toLowerCase().includes(text.toLowerCase()));\n    setIsSearchCount(saveCount.length)\n    setFilteredEntries(saveCount)\n    return saveCount\n  }\n\n\n  function checkEntries() {\n    if(count > 0) {\n      selectEntries(items, state)\n      setIsSearch(true)\n      return\n    }\n  }\n\n  const [query, setQuery] = useState([])\n  function onTextChange(){\n    if(inputRef.current && inputRef.current.value) {\n      setFilter(inputRef.current.value)\n\n      if(count){\n        const _QUERY = items.filter(link => link && link[searchFilter].toLowerCase().includes(state.text.toLowerCase()));\n        setQuery(_QUERY)\n        return\n      }\n\n      return\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Search\n          onTextChange={onTextChange}\n          placeholder={searchCriterion[searchFilter]}\n          inputRef={inputRef} \n          isSearch={isSearch}\n          setSearchFilter={setSearchFilter}\n          searchFilter={searchFilter}\n          setIsSearch={setIsSearch}\n          searchCount={searchCount}\n          setIsSearchCount={setIsSearchCount}\n          totalCount={count}\n          checkEntries={checkEntries}\n          queryText={query}\n          setFilter={setFilter}\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n        />\n      </div>\n      \n\n      <Results\n        entries={filteredEntries}\n        items={items}\n        count={count}\n        state={state}  \n        isSearch={isSearch}\n        setIsSearch={setIsSearch}\n        selectEntries={selectEntries}\n        pageNumber={pageNumber}\n        setPageNumber={setPageNumber}\n      />\n      <Socials />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport EntriesContextProvider from './context/entries.context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <EntriesContextProvider>\n      <App />\n    </EntriesContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}